# -*- coding: utf-8 -*-
# Generated by Django 1.11.14 on 2018-07-21 20:34

import dirtyfields.dirtyfields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Contain',
                'verbose_name_plural': 'Contains',
                'ordering': ('satellite_id',),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FavouriteGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField(null=True, verbose_name="Group's id")),
                ('name', models.CharField(max_length=1000, null=True, verbose_name='Name')),
                ('color', models.CharField(max_length=1000, null=True, verbose_name='Color')),
            ],
            options={
                'verbose_name': 'Favourite Group',
                'verbose_name_plural': 'Favourite Groups',
                'ordering': ('name',),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Possesion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.FavouriteGroup')),
            ],
            options={
                'verbose_name': 'Possession',
                'verbose_name_plural': 'Possessions',
                'ordering': ('group_id',),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Satellite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('satellite_id', models.IntegerField(null=True, unique=True, verbose_name="Satellite's id")),
                ('satellite_name', models.CharField(max_length=1000, null=True, verbose_name="Satellite's name")),
                ('category', models.CharField(max_length=1000, null=True, verbose_name='Category')),
                ('orbit', models.CharField(max_length=1000, null=True, verbose_name='Orbit')),
                ('longitude', models.IntegerField(null=True, verbose_name='Longitude')),
                ('latitude', models.IntegerField(null=True, verbose_name='Latitude')),
                ('altitude', models.FloatField(null=True, verbose_name='Altitude')),
                ('inclination', models.FloatField(null=True, verbose_name='Inclination')),
                ('node_longitude', models.FloatField(null=True, verbose_name='Node Longitude')),
                ('mean_anomaly', models.FloatField(null=True, verbose_name='Mean Anomaly')),
                ('semi_major_axis', models.FloatField(null=True, verbose_name='Semi major axis')),
                ('semi_minor_axis', models.FloatField(null=True, verbose_name='Semi minor axis')),
                ('arg', models.FloatField(null=True, verbose_name='Arg')),
                ('country', models.CharField(max_length=1000, null=True, verbose_name='Country')),
                ('source', models.TextField(max_length=1000, null=True, verbose_name='Source')),
            ],
            options={
                'verbose_name': 'Satellite',
                'verbose_name_plural': 'Satellites',
                'ordering': ('satellite_name',),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True, verbose_name='user id')),
                ('last_name', models.CharField(max_length=255, null=True, verbose_name='last name')),
                ('first_name', models.CharField(max_length=255, null=True, verbose_name='first name')),
                ('login', models.CharField(max_length=255, null=True, verbose_name='login')),
                ('password', models.CharField(max_length=255, null=True, verbose_name='password')),
                ('is_admin', models.BooleanField(default=False, verbose_name='admin')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('user_id',),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.AddField(
            model_name='possesion',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.User'),
        ),
        migrations.AddField(
            model_name='contain',
            name='group_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.FavouriteGroup'),
        ),
        migrations.AddField(
            model_name='contain',
            name='satellite_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Satellite'),
        ),
    ]
